/*
TASK #1
Построение треугольника в цикле
Напишите цикл, который делает семь вызовов console. log и выводит сле­дующий треугольник:
# 
## 
### 
#### 
##### 
###### 
####### 
*/

export const createTriangle = () => {
	let diez = '#'
	let result = ''
	for (let i = 0; i < 7; i++) {
		result += diez
		console.log(`(${result.length}) ${result}`)
	}
}

/*
TASK #2

FizzBuzz 
Напишите программу, в которой с помощью console. log выводятся все чис­ла от 1 до 100 с двумя исключениями. Для чисел, кратных 3, вместо числа выводится "Fizz', а для чисел, кратных 5 (но не 3), - 1'Buzz".

Когда это заработает, измените программу так, чтобы она печатала "Fizzвuzz" для чисел, которые делятся и на 3, и на 5 (и по-прежнему печатайте "Fizz" или "Buzz" для чисел, кратных только одному из них). 
*/

export const getFizzBuzz = () => {
	let result = ''

	for (let i = 1; i <= 100; i++) {
		if (i % 3 === 0 && i % 5 === 0) {
			result += 'FizzBuzz, '
		} else if (i % 3 === 0) {
			result += 'Fizz, '
		} else if (i % 5 === 0) {
			result += 'Buzz, '
		} else {
			result += `${i}, `
		}
	}

	return result
}

/*
TASK #3

Шахматная доска 
Напишите программу, которая создает строку, представляющую сетку 8 х 8, используя для разделения строк символы новой строки. В каждой позиции сетки стоит либо пробел, либо символ"#". Эти символы должны распола­гаться в шахматном порядке. 
Передавая данную строку в console. log, вы должны получить что-то вроде этого:
 # # # #
# # # # 
 # # # #
# # # # 
 # # # #
# # # # 
 # # # #
# # # # 


Если вы уже написали программу, которая генерирует этот узор, определите привязку size = 8 и измените программу так, чтобы она работала для любого size, выводя сетку заданных ширины и высоты. 

*/

export const chess = (n) => {

	const black = '#'
	const white = ' '
	const size = n
	let row = ''
	let result = []

	if (size % 2 === 0) {
		for (let i = 0; i < size; i++) {
			for (let k = 0; k < size / 2; k++) {
				row += white
				row += black
			}
			result.push(row)
			row = ''
		}

		const res = result.map((el, index) => (index % 2 === 0) ? el.split('').reverse().join('') + '\n' : el + '\n').reverse()

		return res.join('')
	} else {
		console.log('Введите четное число, из нечетного не получится сделать матрицу!')
	}
}